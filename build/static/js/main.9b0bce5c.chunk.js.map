{"version":3,"sources":["img/2019-02-08.png","img/2019-02-12.png","img/2019-02-19.png","img/2019-02-19-16.png","img/2019-02-20.png","img/2019-02-22.png","components/Header.js","icons/StackOverflowIcon.js","components/SpeedDials.js","components/Home.js","components/Footer.js","components/Projects.js","components/About.js","components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","setPage","type","onClick","StackOverFlowIcon","className","viewBox","d","useStyles","makeStyles","theme","root","height","radioGroup","margin","spacing","speedDial","position","bottom","right","actions","icon","name","handle","window","location","href","StackOverflowIcon","SpeedDials","classes","useState","open","setOpen","SpeedDial","ariaLabel","SpeedDialIcon","onClose","onOpen","direction","FabProps","color","map","action","SpeedDialAction","key","tooltipTitle","Home","Footer","IconButton","target","title","Transition","React","forwardRef","props","ref","Slide","appBar","marginLeft","flex","Projects","id","setId","handleClose","imgClick","console","log","src","src1","alt","src2","src3","src4","src5","src6","Dialog","fullScreen","TransitionComponent","AppBar","Toolbar","edge","aria-label","Typography","variant","About","Contact","App","page","setPageState","cx","fixpage","Boolean","hostname","match","vh","innerHeight","document","documentElement","style","setProperty","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9b0bce5c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/2019-02-08.c2b4652e.png\";","module.exports = __webpack_public_path__ + \"static/media/2019-02-12.00f272b1.png\";","module.exports = __webpack_public_path__ + \"static/media/2019-02-19.86ea2f49.png\";","module.exports = __webpack_public_path__ + \"static/media/2019-02-19-16.c20d4d25.png\";","module.exports = __webpack_public_path__ + \"static/media/2019-02-20.f1b39e40.png\";","module.exports = __webpack_public_path__ + \"static/media/2019-02-22.b19b3ded.png\";","import React from 'react'\nimport './Header.css'\n\nconst Header = ({ setPage }) => (\n  <header>\n    <button type=\"submit\" onClick={setPage('home')}>Home</button>\n    <button type=\"submit\" onClick={setPage('about')}>About</button>\n    <button type=\"submit\" onClick={setPage('projects')}>Projects</button>\n    <button type=\"submit\" onClick={setPage('contact')}>Contact</button>\n  </header>\n)\n\nexport default Header\n","import React from 'react'\n\n/* simply using the default svg root for colors per mui icons */\nconst StackOverFlowIcon = () => (\n  <svg className=\"MuiSvgIcon-root\" viewBox=\"0 0 120 120\">\n  <path d=\"M84.4 93.8V70.6h7.7v30.9H22.6V70.6h7.7v23.2z\"/>\n  <path d=\"M38.8 68.4l37.8 7.9 1.6-7.6-37.8-7.9-1.6 7.6zm5-18l35 16.3 3.2-7-35-16.4-3.2 7.1zm9.7-17.2l29.7 24.7 4.9-5.9-29.7-24.7-4.9 5.9zm19.2-18.3l-6.2 4.6 23 31 6.2-4.6-23-31zM38 86h38.6v-7.7H38V86z\"/>\n  </svg>\n)\n\nexport default StackOverFlowIcon\n","import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SpeedDial from '@material-ui/lab/SpeedDial'\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon'\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport StackOverflowIcon from '../icons/StackOverflowIcon'\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '4rem',\n  },\n  radioGroup: {\n    margin: theme.spacing(1, 0),\n  },\n  speedDial: {\n    position: 'absolute',\n    '&.MuiSpeedDial-directionUp, &.MuiSpeedDial-directionLeft': {\n      bottom: theme.spacing(2),\n      right: theme.spacing(2),\n    },\n  },\n}))\n\nconst actions = [\n  {\n    icon: <LinkedInIcon />,\n    name: 'LinkedIn',\n    handle() {\n      window.location.href = 'https://www.linkedin.com/in/tim-burgess/'\n    },\n  },\n  {\n    icon: <StackOverflowIcon />,\n    name: 'Stack Overflow',\n    handle() {\n      window.location.href = 'https://stackoverflow.com/users/127660/timbo?tab=profile'\n    },\n  },\n  {\n    icon: <GitHubIcon />,\n    name: 'GitHub',\n    handle() {\n      window.location.href = 'https://github.com/timburgess'\n    },\n  },\n]\n\nconst SpeedDials = ()  => {\n  const classes = useStyles()\n  const [open, setOpen] = useState(false)\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleOpen = () => {\n    setOpen(true)\n  }\n\n  return (\n    <div className={classes.root}>\n      <SpeedDial\n        ariaLabel=\"SpeedDial example\"\n        className={classes.speedDial}\n        icon={<SpeedDialIcon />}\n        onClose={handleClose}\n        onOpen={handleOpen}\n        open={open}\n        direction=\"up\"\n        FabProps={{ color: 'default' }}\n      >\n        {actions.map(action => (\n          <SpeedDialAction\n            key={action.name}\n            icon={action.icon}\n            tooltipTitle={action.name}\n            onClick={action.handle}\n          />\n        ))}\n      </SpeedDial>\n    </div>\n  )\n}\n\nexport default SpeedDials\n","import React, { Fragment } from 'react'\nimport './Home.css'\nimport SpeedDials from './SpeedDials'\n\n\nconst Home = ({ setPage }) => (\n  <Fragment>\n    <div className=\"name\">\n      <h1>Tim Burgess</h1>\n      <div className=\"subtitle\">\n        <div>I build solid React Applications, using things like</div>\n        <div>Material-UI / Redux / Electron / GraphQL / Leaflet</div>\n      </div>\n    </div>\n    <SpeedDials />\n  </Fragment>\n)\n\nexport default Home\n","import React from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\nimport StackOverflowIcon from '../icons/StackOverflowIcon'\nimport './Footer.css'\n\nconst Footer = () => (\n  <footer>\n    <IconButton target=\"_blank\" href=\"https://www.github.com/timburgess\">\n      <GitHubIcon />\n    </IconButton>\n    <IconButton target=\"_blank\" href=\"https://stackoverflow.com/users/127660/timbo?tab=profile\">\n      <StackOverflowIcon />\n    </IconButton>\n    <IconButton target=\"_blank\" href=\"https://www.linkedin.com/in/tim-burgess/\">\n      <LinkedInIcon />\n    </IconButton>\n  </footer>\n)\n\nexport default Footer\n","import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\n// import DialogContent from '@material-ui/core/DialogContent'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItem from '@material-ui/core/ListItem'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Slide from '@material-ui/core/Slide'\nimport Footer from './Footer'\nimport './Projects.css'\n\nimport src1 from '../img/2019-02-08.png'\nimport src2 from '../img/2019-02-12.png'\nimport src3 from '../img/2019-02-19.png'\nimport src4 from '../img/2019-02-19-16.png'\nimport src5 from '../img/2019-02-20.png'\nimport src6 from '../img/2019-02-22.png'\n// import src7 from '../img/2019-03-02.png'\n// import src8 from '../img/2019-03-06.png'\n// import src9 from '../img/2019-03-07.png'\n// import src10 from '../img/2019-03-08.png'\n// import src11 from '../img/2019-03-09.png'\n// import src12 from '../img/2019-03-12.png'\n// import src13 from '../img/2019-03-12-18.png'\n// import src14 from '../img/2019-03-13.png'\n// import src15 from '../img/2019-03-27.png'\n// import src16 from '../img/2019-08-01.png'\n// import src17 from '../img/2019-01-23.png'\n// import src18 from '../img/2019-01-23-07.png'\n// import src19 from '../img/2019-01-16.png'\n// import src20 from '../img/2019-01-02.png'\n// import src21 from '../img/2019-10-15.png'\n// import src22 from '../img/2018-11-27.png'\n// import src23 from '../img/2018-11-02.png'\n// import src24 from '../img/2018-09-06.png'\n\nconst title = ['Interactive map within project form']\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"left\" ref={ref} {...props} />\n})\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}))\n\nconst Projects = () => {\n  const classes = useStyles()\n\n  const [open, setOpen] = useState(false)\n  const [id, setId] = useState(0)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const imgClick = id => {\n    console.log('imgclick', id)\n    setId(id)\n    setOpen(true)\n  }\n\n  return (\n    <div className=\"projects\">\n      <p>Screenshots from the last 12 months</p>\n      <div className=\"container\">\n        <img src={src1} alt=\"screenshot\" onClick={() => imgClick(1)} />\n        <img src={src2} alt=\"screenshot\" onClick={() => imgClick(2)} />\n        <img src={src3} alt=\"screenshot\" onClick={() => imgClick(3)} />\n        <img src={src4} alt=\"screenshot\" onClick={() => imgClick(4)} />\n        <img src={src5} alt=\"screenshot\" onClick={() => imgClick(5)} />\n        <img src={src6} alt=\"screenshot\" onClick={() => imgClick(6)} />\n        {/*\n      <img src={src7} alt=\"screenshot\" />\n      <img src={src8} alt=\"screenshot\" />\n      <img src={src9} alt=\"screenshot\" />\n      <img src={src10} alt=\"screenshot\" />\n      <img src={src11} alt=\"screenshot\" />\n      <img src={src12} alt=\"screenshot\" />\n      <img src={src13} alt=\"screenshot\" />\n      <img src={src14} alt=\"screenshot\" />\n      <img src={src15} alt=\"screenshot\" />\n      <img src={src16} alt=\"screenshot\" />\n      <img src={src17} alt=\"screenshot\" />\n      <img src={src18} alt=\"screenshot\" />\n      <img src={src19} alt=\"screenshot\" />\n      <img src={src20} alt=\"screenshot\" />\n      <img src={src21} alt=\"screenshot\" />\n      <img src={src22} alt=\"screenshot\" />\n      <img src={src23} alt=\"screenshot\" />\n<img src={src24} alt=\"screenshot\" /> */}\n      </div>\n      <Footer />\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar className={classes.appBar} color=\"inherit\">\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"subtitle2\" className={classes.title}>\n              {title[id - 1]}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <div className=\"dialog-content\">\n          <img className=\"dialog-img\" src={src1} alt=\"screenshot\" />\n        </div>\n         { /*\n         <div className=\"dialog-content\">\n            Foo\n          </div>\n        <List>\n          <ListItem button>\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\n          </ListItem>\n          <Divider />\n          <ListItem button>\n            <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\n          </ListItem>\n        </List> */}\n      </Dialog>\n    </div>\n  )\n}\n\nexport default Projects\n","import React, { Fragment } from 'react'\nimport './About.css'\nimport Footer from './Footer'\n\nconst About = () => (\n  <Fragment>\n    <div className=\"about\">\n      <p>\n        I've been building in the front-end with React since early 2017. I've built product for\n        companies that was then sold to larger companies and I've led front-end development teams. I\n        have over a decade of web development experience.\n      </p>\n      <p>\n        My knowledge of CSS is encylopedic and I have taught HTML and CSS at university-level for\n        computer science students. Virtually all of my work in 2019 has been using hooks for state\n        (the new functional React style) and I have built projects with GraphQL and Redux.\n      </p>\n      <p>\n        I live in Dunedin, New Zealand - 4 hours after the west coast and 2 hours before Sydney.\n      </p>\n    </div>\n    <Footer />\n  </Fragment>\n)\n\nexport default About\n","import React, { Fragment } from 'react'\nimport './Contact.css'\nimport Footer from './Footer'\n\nconst Contact = () => (\n  <Fragment>\n    <div className=\"contact\">\n      <ul>\n        <li>email</li>\n        <li>timburgess at mac.com</li>\n        <li>mobile</li>\n        <li>NZ  +64-225-804-656</li>\n        <li>Aust  +61-448-793-972</li>\n      </ul>\n    </div>\n    <Footer />\n  </Fragment>\n)\n\nexport default Contact\n","import React, { useState } from 'react'\nimport cx from 'classnames'\nimport Header from './components/Header'\nimport Home from './components/Home'\nimport Projects from './components/Projects'\nimport About from './components/About'\nimport Contact from './components/Contact'\n\n// this is such a simple thing why bring in react-router */\nconst App = () => {\n  // const [page, setPageState] = useState('home')\n  const [page, setPageState] = useState('projects')\n\n  const setPage = page => () => setPageState(page)\n\n  return (\n    <div className={cx({ fixpage: page !== 'projects' })}>\n      <Header setPage={setPage} />\n      {page === 'home' && <Home setPage={setPage} />}\n      {page === 'projects' && <Projects setPage={setPage} />}\n      {page === 'about' && <About setPage={setPage} />}\n      {page === 'contact' && <Contact setPage={setPage} />}\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// calc viewport height and set --vh custom property as mobile browsers lie to us\nlet vh = window.innerHeight * 0.01;\ndocument.documentElement.style.setProperty('--vh', `${vh}px`);\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}